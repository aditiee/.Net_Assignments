using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Day2Practice
{
    class Program
    {
        static void Main(string[] args)
        {
            Employee o1 = new Employee("Aditi", 123465, 10);
            Console.WriteLine("All Accepted!");
            Console.WriteLine("----------------------");

            Employee o2 = new Employee("Aditi", 123465);
            Console.WriteLine("Deptno");
            Console.WriteLine("----------------------");

            Employee o3 = new Employee("Aditi");
            Console.WriteLine("Basic and Deptno");
            Console.WriteLine("----------------------");

            Employee o4 = new Employee();
            Console.WriteLine("All not Accepted!");
            Console.WriteLine("----------------------");

            Console.WriteLine("Empno : " + o1.EmpNo);
            Console.WriteLine("Empno : " + o2.EmpNo);
            Console.WriteLine("Empno : " + o3.EmpNo);
            Console.WriteLine("Empno : " + o4.EmpNo);
            Console.WriteLine("---------------------------------");
            Console.WriteLine("Empno : " + o4.EmpNo);
            Console.WriteLine("Empno : " + o3.EmpNo);
            Console.WriteLine("Empno : " + o2.EmpNo);
            Console.WriteLine("Empno : " + o1.EmpNo);

        }
    }

    public class Employee
    {
        //string Name -> no blank names should be allowed
        private string name;
        public string Name
        {
            set {
                if(value != null)
                {
                    name = value;
                }
                else
                {
                    Console.WriteLine("NAME SHOULD NOT BE NULL !");
                }
            }

            get
            {
                return name;
            }

        }
        //int EmpNo -> must be readonly and autogenerated

        private static int empnoC = 0;
        private int empno;
        public int EmpNo
        {
            get
            {
                return empno;
            }
        }


        //decimal Basic -> must be between some range
        private decimal basic;
        public decimal Basic
        {
            set
            {
                if(value>100000 && value<10000000)
                {
                    basic = value;
                }
                else
                {
                    Console.WriteLine("Out of Range");
                }
            }

        }
        //short DeptNo -> must be > 0
        private short deptno;
        public short DeptNo
        {
            set
            {
                if(value > 0)
                {
                    deptno = value;
                }
                else
                {
                    Console.WriteLine("Invalid!");
                }
            }
        }


        //decimal GetNetSalary() -> returns calculated net salary (Use any formula to get net salary based on Basic salary)
        public decimal GetNetSalary()
        {
            decimal salary;
            salary = basic + (basic * 10);
            return salary;
         }

        public Employee(string Name=null,decimal Basic=0, short DeptNo=0)
        {
            empnoC++;
            empno = empnoC;
            this.Name = Name;
            this.Basic = Basic;
            this.DeptNo = DeptNo;


        }
    }
}
